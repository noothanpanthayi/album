"use client";
import React, { useState, useEffect } from "react";
import NextImage from "next/image";
import { useRouter } from "next/navigation";
import styles from "./page.module.css";
// import {getHost} from '../../api/getHost';

function Page() {
  const [state, setState] = useState({
    isFullScreen: false,
    showNav: false,
    currentImg: "ny11",
    currentIndex: 0,
    imageWidth: "",
    imageHeight: "",
    s3images: [],
    slideShowSpeed: 3,
    slideShowActive: false,
    intervalHandler: null,
    imageLoaded: false,
  });

  const fetchImages = async () => {
    // console.log("HOST URL ", `${getHost()}/api/list-images?folderName=travel`);

    // const response = await fetch(`${getHost()}/api/list-images?folderName=nyalbum`);

    // const response = await fetch('http://3.80.91.134/api/list-images?folderName=travel');
    const response = await fetch(
      "http://localhost:3000/api/list-images?folderName=nyalbum"
    );
    const data = await response.json();

    data.images.forEach((url) => {
      const link = document.createElement("link");
      link.rel = "preload";
      link.as = "image";
      link.href = url;
      document.head.appendChild(link);
    });

    // data.images.forEach(url=>{
    //   const img = new Image();
    //   img.src=url
    // })

    setState((prevState) => {
      return {
        ...prevState,
        s3images: data.images,
        showNav: true,
      };
    });
  };

  const toggleFullScreen = () => {
    if (!state.isFullScreen) {
      document.documentElement.requestFullscreen();
    } else {
      if (document.fullscreenElement) document.exitFullscreen();
    }

    setState((prevState) => {
      return {
        ...prevState,
        isFullScreen: !prevState.isFullScreen,
      };
    });
  };

  const handleEscapeKey = () => {
    // document.exitFullscreen();
    if (!document.fullscreenElement) {
      // document.exitFullscreen();
      setState((prevState) => {
        return {
          ...prevState,
          isFullScreen: false,
        };
      });
    }
  };

  useEffect(() => {
    document.addEventListener("fullscreenchange", handleEscapeKey);
    document.addEventListener("keydown", handleKeyDown);
    fetchImages();
    return () => {
      if (state.intervalHandler) {
        console.log("clearing interval");
        clearInterval(state.intervalHandler);
      }
    };
  }, []);

  const router = useRouter();

  const handleKeyDown = (e) => {
    switch (e.key) {
      case "ArrowRight":
        navigate("next");
        break;
      case "ArrowLeft":
        navigate("back");
        break;
      case " ":
        navigate("next  ");
    }
  };

  const navigate = (mode) => {
    let currentIndex = 0;

    setState((prevState) => {
      if (mode === "next") {
        currentIndex =
          prevState.currentIndex >= prevState.s3images?.length - 1
            ? 0
            : prevState.currentIndex + 1;
      } else {
        currentIndex =
          prevState.currentIndex <= 0
            ? prevState.s3images?.length - 1
            : prevState.currentIndex - 1;
      }
      return {
        ...prevState,
        currentIndex,
        imageLoaded: false,
      };
    });
  };

  const home = () => {
    router.push("/albums");
  };

  const handleImageLoad = () => {
    console.log("IMAGE LOADED");
    setState((prevState) => {
      return {
        ...prevState,
        imageLoaded: true,
      };
    });
  };

  // const handleImageSize=()=>{
  //   setState((prevState) => {
  //     return {
  //       ...prevState,
  //      imageHeight:window.innerHeight,
  //      imageWidth:''
  //     //  imageWidth:window.innerWidth
  //     };
  //   });
  // }

  const slideShowOn = () => {
    const intervalHandler = setInterval(() => {
      navigate("next");
    },7000);
    setState((prevState) => {
      return {
        ...prevState,
        intervalHandler,
      };
    });
  };

  const slideShowOff = () => {
    if (state.intervalHandler) {
      clearInterval(state.intervalHandler);
      setState((prevState) => {
        return {
          ...prevState,
          intervalHandler: null,
        };
      });
    }
  };

  const toggleAuto = () => {
    let slideShowActive = false;
    if (!state.slideShowActive) {
      // document.documentElement.requestFullscreen();
      slideShowOn();
      slideShowActive = true;
    } else {
      // document.exitFullscreen();
      slideShowOff();
      slideShowActive = false;
    }
    setState((prevState) => {
      return {
        ...prevState,
        slideShowActive,
      };
    });
  };

  const updateSpeed=(e)=>{
    console.log(e.target.value)
    setState((prevState) => {
      return {
        ...prevState,
        slideShowSpeed:parseInt(e.target.value),
      };
    });
  }

  return (
    <>
      <div style={{ border: "solid px red" }}>
        {!state.isFullScreen ? (
          <div className={imageTitle}>
            <div onClick={home} title="Click here to go back">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                height="24px"
                viewBox="0 -960 960 960"
                width="24px"
                fill="#fff"
              >
                <path d="M240-200h120v-240h240v240h120v-360L480-740 240-560v360Zm-80 80v-480l320-240 320 240v480H520v-240h-80v240H160Zm320-350Z" />
              </svg>
            </div>

            <div onClick={home} style={{ textTransform: "capitalize" }}>
              {
                state.s3images[state.currentIndex]
                  ?.split("/")[4]
                  .split("?")[0]
                  .split("_")
                  .join(" ")
                  .split(".")[0]
              }
            </div>
            <div>
              <div className={utils}>
                {!state.slideShowActive && (
                  <div
                    title="Start Slide Show"
                    onClick={toggleAuto}
                    style={{ cursor: "pointer", color: "#fff" }}
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      height="24px"
                      viewBox="0 -960 960 960"
                      width="24px"
                      fill="#fff"
                    >
                      <path d="m380-300 280-180-280-180v360ZM480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z" />
                    </svg>
                  </div>
                )}
                {state.slideShowActive && (
                  <div style={{ display: "flex" }}>
                    {/* <div>
                      <input onChange={updateSpeed} type="number" value={state.slideShowSpeed} min="0" max="10" />
                    </div> */}
                    <div title="Stop Slide Show" onClick={toggleAuto}>
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        height="24px"
                        viewBox="0 -960 960 960"
                        width="24px"
                        fill="red"
                      >
                        <path d="M320-320h320v-320H320v320ZM480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z" />
                      </svg>
                    </div>
                  </div>
                )}
                <div title="Full Screen" onClick={toggleFullScreen}>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    height="24px"
                    viewBox="0 -960 960 960"
                    width="24px"
                    fill="#fff"
                  >
                    <path d="M120-120v-200h80v120h120v80H120Zm520 0v-80h120v-120h80v200H640ZM120-640v-200h200v80H200v120h-80Zm640 0v-120H640v-80h200v200h-80Z" />
                  </svg>
                </div>
              </div>
            </div>
          </div>
        ) : (
          <div
            style={{
              position: "relative",
              display: "flex",
              justifyContent: "flex-end",
            }}
          >
            <div
              title="Exit Full Screen"
              onClick={toggleFullScreen}
              className={`${exitFullScreen} ${state.slideShowActive?exitActive:exitNormal} `}
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                height="20px"
                viewBox="0 -960 960 960"
                width="20px"
                fill={state.slideShowActive?"#f00":"#fff"}
              >
                <path d="m136-80-56-56 264-264H160v-80h320v320h-80v-184L136-80Zm344-400v-320h80v184l264-264 56 56-264 264h184v80H480Z" />
              </svg>
            </div>
          </div>
        )}

        <div
          className={`${imgContainer} ${
            state.isFullScreen ? noCntnrMargin : CntnrMargin
          }`}
        >
          {state.showNav && state.imageLoaded && (
            <div
              title="Click to Navigate Back"
              onClick={() => navigate("back")}
              className={backLayer}
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                height="60px"
                viewBox="0 -960 960 960"
                width="80px"
                fill="#fff"
              >
                <path d="M400-80 0-480l400-400 71 71-329 329 329 329-71 71Z" />
              </svg>
            </div>
          )}

          {state.showNav && state.imageLoaded && (
            <div
              title="Click to Navigate Forward"
              onClick={() => navigate("next")}
              className={nextLayer}
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                height="60px"
                viewBox="0 -960 960 960"
                width="80px"
                fill="#fff"
              >
                <path d="m321-80-71-71 329-329-329-329 71-71 400 400L321-80Z" />
              </svg>
            </div>
          )}

          {state.s3images?.length > 0 && (
            <>
              <div
                style={{
                  display: "flex",
                  flex: 1,
                  justifyContent: "center",
                  alignItems: "center",
                }}
              >
                <img
                  src={state.s3images[state.currentIndex]}
                  // loading="lazy"
                  decoding="async"
                  className={state.imageLoaded ? imgActive : image}
                  style={{
                    maxWidth: window.innerWidth,
                    maxHeight: window.innerHeight,
                  }}
                  onLoad={handleImageLoad}
                />
              </div>
             
            </>
          )}
        </div>
      </div>
    </>
  );
}

const {
  backLayer,
  nextLayer,
  imgContainer,
  imageTitle,
  exitFullScreen,
  CntnrMargin,
  noCntnrMargin,
  image,
  utils,
  exitActive,
  exitNormal,
  imgActive,
} = styles;
export default Page;
